<%- include('./partials/heading.ejs') %>

    <title>Home Page</title>
    </head>

    <body>

        <header>
            <nav class="navbar navbar-expand bg-secondary navbar-dark">
                <div class="navbar-nav">
                    <a class="nav-item nav-link active" href="/">Home</a>
                    <a class="nav-item nav-link" href="/kanyequote">Kanye Quote</a>
                    <a class="nav-item nav-link" href="/restcountries">Rest Countries</a>
                    <a class="nav-item nav-link" href="/mlbPlayers">Mlb Players</a>
                </div>
            </nav>
        </header>

        <div class=" mx-auto text-center mt-5">
            <h1 class="display-3 text-light">MLB Players REST API</h1>
            <div class="w-75 mx-auto mt-5 text-light">
                <p class="lead">
                    This project was created in order for me to use REST-API's that were created by other people online 
                    and for me to create my own REST API. REST API's are a big part of programming since it can forward 
                    information to a user or allow users to create, edit and delete other information through an endpoint, 
                    which is why I wanted to create one, to show I know the understanding of REST API's and how they work.
                </p>
                <p class="lead">
                    The REST API's I used from the internet were Kanye.rest which is an API which just returns quotes that 
                    Kanye West had said and REST Countries, this is an API which returns information about all the countries 
                    in the world, including the flag, currencies, location, google maps link, languages and much more.
                </p>
                <p class="lead">
                    My custom REST API is called MLB Players which I made so that users could find out information about MLB 
                    players. The API returns the players first name, last name, number and team with many different get methods, 
                    users can look up players just by first name to find everyone with the same first name, the same idea with 
                    last name, number and team. The API also allows you to create, edit and delete players through specific 
                    endpoints. With MLB Players I wanted to create a different way of viewing REST API's so I gave users the 
                    capability to use the REST API through a user friendly interface, the user interface allows users to fill 
                    out forms like they would on a normal website but when the submit button is clicked, it sends a request 
                    through the API, the submit button uses API endpoints in order to handle the information passed.
                </p>
                <p class="lead">
                    The technologies I used were : Express, MongoDB, Mongoose, EJS, Bootstrap and etc.
                </p>
            </div>
        </div>

<%- include('./partials/footer.ejs') %>
